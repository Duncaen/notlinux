--- stat.c.orig
+++ stat.c
@@ -30,6 +30,8 @@
  * POSSIBILITY OF SUCH DAMAGE.
  */
 
+#define _GNU_SOURCE
+
 #include <sys/types.h>
 #include <sys/stat.h>
 
@@ -44,19 +46,38 @@
 #include <string.h>
 #include <time.h>
 #include <unistd.h>
+#include <search.h>
+#include <mntent.h>
+#include <paths.h>
 
+#if 0
 #define DEF_FORMAT \
 	"%d %i %Sp %l %Su %Sg %r %z \"%Sa\" \"%Sm\" \"%Sc\" " \
 	"%k %b %#Xf %N"
 #define RAW_FORMAT	"%d %i %#p %l %u %g %r %z %a %m %c " \
 	"%k %b %f %N"
+#else
+#define DEF_FORMAT \
+	"%d %i %Sp %l %Su %Sg %r %z \"%Sa\" \"%Sm\" \"%Sc\" " \
+	"%k %b %N"
+#define RAW_FORMAT	"%d %i %#p %l %u %g %r %z %a %m %c " \
+	"%k %b %N"
+#endif
 #define LS_FORMAT	"%Sp %l %Su %Sg %Z %Sm %N%SY"
 #define LSF_FORMAT	"%Sp %l %Su %Sg %Z %Sm %N%T%SY"
+#if 0
 #define SHELL_FORMAT \
 	"st_dev=%d st_ino=%i st_mode=%#p st_nlink=%l " \
 	"st_uid=%u st_gid=%g st_rdev=%r st_size=%z " \
 	"st_atime=%a st_mtime=%m st_ctime=%c " \
 	"st_blksize=%k st_blocks=%b st_flags=%f"
+#else
+#define SHELL_FORMAT \
+	"st_dev=%d st_ino=%i st_mode=%#p st_nlink=%l " \
+	"st_uid=%u st_gid=%g st_rdev=%r st_size=%z " \
+	"st_atime=%a st_mtime=%m st_ctime=%c " \
+	"st_blksize=%k st_blocks=%b"
+#endif
 #define LINUX_FORMAT \
 	"  File: \"%N\"%n" \
 	"  Size: %-11z  FileType: %HT%n" \
@@ -123,13 +144,18 @@
 #define SHOW_st_size	'z'
 #define SHOW_st_blocks	'b'
 #define SHOW_st_blksize	'k'
+#if 0
 #define SHOW_st_flags	'f'
 #define SHOW_st_gen	'v'
+#endif
 #define SHOW_symlink	'Y'
 #define SHOW_filetype	'T'
 #define SHOW_filename	'N'
 #define SHOW_sizerdev	'Z'
 
+static void *filesystems;
+static int scanned_filesystems;
+
 void	usage(const char *);
 void	output(const struct stat *, const char *,
 	    const char *, int, int);
@@ -140,6 +166,7 @@
 	    int, int, int, int,		/* the parsed format */
 	    int, int);
 
+
 char *timefmt;
 
 #define addchar(s, c, nl) \
@@ -150,6 +177,73 @@
 
 extern char *__progname;
 
+struct idmap {
+	long id;
+	char *name;
+};
+
+static int fwid;
+
+int
+idorder(const void *a, const void *b)
+{
+	struct idmap *ia = (struct idmap *)a;
+	struct idmap *ib = (struct idmap *)b;
+
+	if (ia->id == ib->id)
+		return 0;
+	else if (ia->id < ib->id)
+		return -1;
+	else
+		return 1;
+}
+
+static void
+scan_filesystems()
+{
+	FILE *mtab;
+	struct mntent *mnt;
+	struct stat st;
+
+	/* Approach: iterate over mtab and memorize st_dev for each mountpoint.
+	 * this will fail if we are not allowed to read the mountpoint, but then
+	 * we should not have to look up this st_dev value... */
+	mtab = setmntent(_PATH_MOUNTED, "r");
+	if (!mtab)
+		return;
+
+	while ((mnt = getmntent(mtab))) {
+		if (stat(mnt->mnt_dir, &st) < 0)
+			continue;
+
+		struct idmap *newkey = malloc(sizeof (struct idmap));
+		newkey->id = st.st_dev;
+		newkey->name = strdup(mnt->mnt_fsname);
+		tsearch(newkey, &filesystems, idorder);
+	};
+
+	endmntent(mtab);
+
+	scanned_filesystems = 1;
+}
+
+static char *
+devname(dev_t devid, mode_t mode)
+{
+	struct idmap key, **result;
+	key.id = devid;
+	key.name = 0;
+
+	if (!scanned_filesystems)
+		scan_filesystems();
+	result = tfind(&key, &filesystems, idorder);
+
+	if (result && (int)strlen((*result)->name) > fwid)
+		fwid = strlen((*result)->name);
+
+	return result ? (*result)->name : "??";
+}
+
 int
 main(int argc, char *argv[])
 {
@@ -448,8 +542,10 @@
 			fmtcase(what, SHOW_st_size);
 			fmtcase(what, SHOW_st_blocks);
 			fmtcase(what, SHOW_st_blksize);
+#if 0
 			fmtcase(what, SHOW_st_flags);
 			fmtcase(what, SHOW_st_gen);
+#endif
 			fmtcase(what, SHOW_symlink);
 			fmtcase(what, SHOW_filetype);
 			fmtcase(what, SHOW_filename);
@@ -610,28 +706,36 @@
 	case SHOW_st_atime:
 		gottime = 1;
 		secs = st->st_atime;
+#if 0
 		nsecs = st->st_atimensec;
+#endif
 		/* FALLTHROUGH */
 	case SHOW_st_mtime:
 		if (!gottime) {
 			gottime = 1;
 			secs = st->st_mtime;
+#if 0
 			nsecs = st->st_mtimensec;
+#endif
 		}
 		/* FALLTHROUGH */
 	case SHOW_st_ctime:
 		if (!gottime) {
 			gottime = 1;
 			secs = st->st_ctime;
+#if 0
 			nsecs = st->st_ctimensec;
+#endif
 		}
 		/* FALLTHROUGH */
 	case SHOW_st_btime:
+#if 0
 		if (!gottime) {
 			gottime = 1;
 			secs = st->__st_birthtimespec.tv_sec;
 			nsecs = st->__st_birthtimespec.tv_nsec;
 		}
+#endif
 		small = (sizeof(secs) == 4);
 		data = secs;
 		small = 1;
@@ -667,6 +771,7 @@
 		if (ofmt == 0)
 			ofmt = FMTF_UNSIGNED;
 		break;
+#if 0
 	case SHOW_st_flags:
 		small = (sizeof(st->st_flags) == 4);
 		data = st->st_flags;
@@ -702,6 +807,7 @@
 		if (ofmt == 0)
 			ofmt = FMTF_STRING;
 		break;
+#endif
 	case SHOW_filetype:
 		small = 0;
 		data = 0;
