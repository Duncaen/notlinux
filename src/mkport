<$root/src/mkconf

`export \
	CC=$CC \
	LD=$LD \
	CFLAGS=$CFLAGS \
	LDFLAGS=$LDFLAGS \
	BUILDCC=$BUILDCC \
	BUILDLD=$BUILDLD \
	HOSTCC=$HOSTCC \
	HOSTLD=$HOSTLD \
	DESTDIR=$root \
	PREFIX=\
	BINDIR=$objtype/bin \
	bindir=$BINDIR \
	LIBDIR=$objtype/lib \
	libdir=$LIBDIR \
	INCDIR=$objtype/src/include \
`

wrk=$pkg-$ver
pwd=`pwd`

quiet=

update=

distfile=`fname=${url##*>}; [ "$url" = "$fname" ] && fname=${fname##*/}; printf "%s" "$fname"`

# FILES=`lr files "files-${ver}"`
# PATCHES=`lr patches "patches-${ver}"`

src/.done-$pkg-$ver: src/.fetch-$pkg-$ver src/.config-$pkg-$ver src/.build-$pkg-$ver src/.install-$pkg-$ver
	touch $target

src/.fetch-$pkg-$ver:Q: pre-fetch do-fetch post-fetch
	touch $target

src/.config-$pkg-$ver:Q: pre-config do-config post-config
	touch $target

src/.build-$pkg-$ver:Q: pre-build do-build post-build
	touch $target

src/.install-$pkg-$ver:Q: pre-install do-install post-install
	touch $target

fetch:V: src/.fetch-$pkg-$ver
config:V: src/.config-$pkg-$ver
build:V: src/.build-$pkg-$ver
install:V: src/.install-$pkg-$ver
clean:V: pre-clean do-clean post-clean

pre-%:QV:
	true

post-%:QV:
	true

do-fetch:QV:
	[ -d "src" ] || mkdir -p "src"
	[ -z "$cvs" ] || (
		cd src
		[ -d "$wrk" ] \
			&& { [ -z "$update" ] || cvs ${quiet:+"-q"} up -r"$cvs_rev" -d "$wrk"; } \
			|| cvs ${quiet:+"-q"} -d "$cvs" get -r"$cvs_rev" -d "$wrk" "$cvs_mod"
	)
	[ -z "$git" ] || (
		cd src
		[ -d "$wrk" ] \
			|| git clone ${quiet:+"-q"} "$git" "$wrk" \
			&& cd "$wrk"
		git reset ${quiet:+"-q"} --hard && git checkout "${git_rev:=$ver}"
	)
	[ -z "$url" ] || (
		cd src
		[ -e "$distfile" ] \
			|| wget ${quiet:+"-nv"} -c -O "$distfile" "$url"
		[ -d "$wrk" ] \
			|| case "$distfile" in
				*.tar*|*.tgz) tar xfv "$distfile" ;;
				esac
	)
	[ ! -d ./files ] || cp -r ./files/* "src/${wrk}/"
	[ ! -d ./patches ] || for p in ./patches/*; do
		patch --dry-run -d "src/${wrk}" -Np0 <"$p" \
			&& patch -b -d "src/${wrk}" -Np0 <"$p" || true
	done

do-config:QV:
	cd "src/${wrk}"
	[ ! -e ./configure ] || CFLAGS=$CFLAGS LDFLAGS=$LDFLAGS ./configure --prefix=/usr $cfg

do-build:QV:
	cd "src/${wrk}"
	case "${build_style=make}" in
	make) make $makeargs ;;
	mk) mk $MKFLAGS ;;
	esac

do-install:QV:
	cd "src/${wrk}"
	case "${build_style:-make}" in
	make) make $make_install_args ${make_install_target:-install} ;;
	mk) mk $MKFLAGS $make_install_args ${make_install_target:-install} ;;
	esac

do-clean:QV:
	cd "src/${wrk}" && \
	case "${build_style:-make}" in
	make) make $make_clean_args ${make_clean_target:-clean} ;;
	mk) mk $MKFLAGS $make_clean_args ${make_clean_target:-clean} ;;
	esac || true
